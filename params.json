{
  "name": "Python-markdown2",
  "tagline": "markdown2: A fast and complete implementation of Markdown in Python",
  "body": "Markdown is a light text markup format and a processor to convert that to HTML.\r\nThe originator describes it as follows:\r\n\r\n> Markdown is a text-to-HTML conversion tool for web writers.\r\n> Markdown allows you to write using an easy-to-read,\r\n> easy-to-write plain text format, then convert it to\r\n> structurally valid XHTML (or HTML).\r\n>\r\n> -- <http://daringfireball.net/projects/markdown/>\r\n\r\nThis (markdown2) is a fast and complete Python implementation of Markdown. It\r\nwas written to closely match the behaviour of the original Perl-implemented\r\nMarkdown.pl. Markdown2 also comes with a number of extensions (called\r\n\"extras\") for things like syntax coloring, tables, header-ids. See the\r\n\"Extra Syntax\" section below. \"markdown2\" supports all Python versions\r\nfrom 2.4 to 3.3 (and pypy and jython, though I don't frequently test those).\r\n\r\nThere is another [Python\r\nmarkdown.py](https://pythonhosted.org/Markdown/). However, at\r\nleast at the time this project was started, markdown2.py was faster (see the\r\n[Performance\r\nNotes](https://github.com/trentm/python-markdown2/wiki/Performance-Notes)) and,\r\nto my knowledge, more correct (see [Testing\r\nNotes](https://github.com/trentm/python-markdown2/wiki/Testing-Notes)).\r\nThat was a while ago though, so you shouldn't discount Python-markdown from\r\nyour consideration.\r\n\r\nFollow <a href=\"https://twitter.com/intent/user?screen_name=trentmick\" target=\"_blank\">@trentmick</a>\r\nfor updates to python-markdown2.\r\n\r\nTravis-ci.org test status: [![Build Status](https://secure.travis-ci.org/trentm/python-markdown2.png)](http://travis-ci.org/trentm/python-markdown2)\r\n\r\n\r\n# Install\r\n\r\nTo install it in your Python installation run *one* of the following:\r\n\r\n    pip install markdown2\r\n    pypm install markdown2      # if you use ActivePython (activestate.com/activepython)\r\n    easy_install markdown2      # if this is the best you have\r\n    python setup.py install\r\n\r\nHowever, everything you need to run this is in \"lib/markdown2.py\". If it is\r\neasier for you, you can just copy that file to somewhere on your PythonPath\r\n(to use as a module) or executable path (to use as a script).\r\n\r\n\r\n# Quick Usage\r\n\r\nAs a module:\r\n\r\n    >>> import markdown2\r\n    >>> markdown2.markdown(\"*boo!*\")  # or use `html = markdown_path(PATH)`\r\n    u'<p><em>boo!</em></p>\\n'\r\n\r\n    >>> from markdown2 import Markdown\r\n    >>> markdowner = Markdown()\r\n    >>> markdowner.convert(\"*boo!*\")\r\n    u'<p><em>boo!</em></p>\\n'\r\n    >>> markdowner.convert(\"**boom!**\")\r\n    u'<p><strong>boom!</strong></p>\\n'\r\n\r\nAs a script (CLI):\r\n\r\n    $ python markdown2.py foo.md > foo.html\r\n\r\nI think pip-based installation will enable this as well:\r\n\r\n    $ markdown2 foo.md > foo.html\r\n\r\nSee the [project wiki](https://github.com/trentm/python-markdown2/wiki),\r\n[lib/markdown2.py](https://github.com/trentm/python-markdown2/blob/master/lib/markdown2.py)\r\ndocstrings and/or `python markdown2.py --help` for more details.\r\n\r\n\r\n# Extra Syntax (aka extensions)\r\n\r\nMany Markdown processors include support for additional optional syntax\r\n(often called \"extensions\") and markdown2 is no exception. With markdown2 these\r\nare called \"extras\".  Using the \"footnotes\" extra as an example, here is how\r\nyou use an extra ... as a module:\r\n\r\n    $ python markdown2.py --extras footnotes foo.md > foo.html\r\n\r\nas a script:\r\n\r\n    >>> import markdown2\r\n    >>> markdown2.markdown(\"*boo!*\", extras=[\"footnotes\"])\r\n    u'<p><em>boo!</em></p>\\n'\r\n\r\nThere are a number of currently implemented extras for tables, footnotes,\r\nsyntax coloring of `<pre>`-blocks, auto-linking patterns, table of contents,\r\nSmarty Pants (for fancy quotes, dashes, etc.) and more. See the [Extras\r\nwiki page](https://github.com/trentm/python-markdown2/wiki/Extras) for full\r\ndetails.\r\n\r\n\r\n# Project\r\n\r\nThe python-markdown2 project lives at\r\n<https://github.com/trentm/python-markdown2/>.  (Note: On Mar 6, 2011 this\r\nproject was moved from [Google Code](http://code.google.com/p/python-markdown2)\r\nto here on Github.) See also, [markdown2 on the Python Package Index\r\n(PyPI)](http://pypi.python.org/pypi/markdown2).\r\n\r\nThe change log: <https://github.com/trentm/python-markdown2/blob/master/CHANGES.md>\r\n\r\nTo report a bug: <https://github.com/trentm/python-markdown2/issues>\r\n\r\n# Contributing\r\n\r\nWe welcome pull requests from the community. Please take a look at the [TODO](https://github.com/trentm/python-markdown2/blob/master/TODO.txt) for opportunities to help this project. For those wishing to submit a pull request to `python-markdown2` please ensure it fulfills the following requirements:\r\n\r\n* It must pass PEP8.\r\n* It must include relevant test coverage.\r\n* Bug fixes must include a regression test that exercises the bug.\r\n* The entire test suite must pass.\r\n* The README and/or docs are updated accordingly.\r\n\r\n\r\n# Test Suite\r\n\r\nThis markdown implementation passes a fairly extensive test suite. To run it:\r\n\r\n    make test\r\n\r\nThe crux of the test suite is a number of \"cases\" directories -- each with a\r\nset of matching .text (input) and .html (expected output) files. These are:\r\n\r\n    tm-cases/                   Tests authored for python-markdown2 (tm==\"Trent Mick\")\r\n    markdowntest-cases/         Tests from the 3rd-party MarkdownTest package\r\n    php-markdown-cases/         Tests from the 3rd-party MDTest package\r\n    php-markdown-extra-cases/   Tests also from MDTest package\r\n\r\nSee the [Testing Notes wiki\r\npage](https://github.com/trentm/python-markdown2/wiki/Testing-Notes) for full\r\ndetails.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}